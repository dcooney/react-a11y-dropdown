{"version":3,"sources":["lib/components/DropDown/DropDown.js","components/MenuOne.js","components/MenuTwo.js","components/MenuThree.js","components/Intro.js","App.js","index.js"],"names":["DropDown","props","html","id","label","children","useStyles","className","buttonClassName","dropdownClassName","useState","expanded","setExpanded","loaded","useRef","containerRef","menuRef","triggerRef","clickOutside","event","current","contains","target","focusOutside","escClick","key","setFocus","element","setTimeout","focus","preventScroll","useEffect","keyboardControls","active","document","activeElement","elements","querySelectorAll","length","el","array","Array","prototype","slice","call","index","indexOf","getActiveIndex","which","next","preventDefault","prev","addEventListener","removeEventListener","ref","classNames","onClick","dangerouslySetInnerHTML","__html","MenuOne","href","MenuTwo","htmlFor","type","MenuThree","Intro","App","defaultProps","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8c4a7856.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React, {useEffect, useRef, useState} from 'react'\nimport classNames from 'classnames'\nimport './styles.css'\n/**\n * Accessibile Dropdown component.\n *\n * @param   {object}  props          The component props.\n * @param   {object}  props.children Container children.\n * @returns {Element}                The DropDown component.\n */\nexport default function DropDown(props) {\n   const {\n      id,\n      label,\n      children,\n      useStyles,\n      className,\n      buttonClassName,\n      dropdownClassName\n   } = props\n   const [expanded, setExpanded] = useState(false)\n   const loaded = useRef(false)\n   const containerRef = useRef()\n   const menuRef = useRef()\n   const triggerRef = useRef()\n   const focusable =\n      'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])'\n\n   useEffect(() => {\n      /**\n       * Handle keyboard controls.\n       *\n       * @param {Event} event The click event.\n       */\n      function keyboardControls(event) {\n         const active = document.activeElement\n         const elements = menuRef.current.querySelectorAll(focusable)\n\n         // Exit if elements are not focusable.\n         if (!containerRef.current.contains(active) || elements.length === 0) {\n            return\n         }\n\n         const {index, length} = getActiveIndex(active, elements)\n\n         if (event.which === 40) {\n            if (active === triggerRef.current) {\n               // Focused on trigger then expand the menu.\n               setFocus(elements[0])\n               setExpanded(true)\n            } else {\n               const next = index === length ? 0 : index + 1\n               elements[next] && setFocus(elements[next])\n            }\n            event.preventDefault()\n            return false\n         }\n\n         if (event.which === 38) {\n            if (active === triggerRef.current) {\n               // Focused on trigger then collapse the menu.\n               setExpanded(false)\n            } else {\n               const prev = index === 0 ? length : index - 1\n               elements[prev] && setFocus(elements[prev])\n            }\n            event.preventDefault()\n            return false\n         }\n      }\n\n      if (!loaded.current) {\n         document.addEventListener('click', clickOutside)\n         document.addEventListener('keyup', focusOutside)\n         document.addEventListener('keydown', keyboardControls)\n         document.addEventListener('keydown', escClick)\n         loaded.current = true\n      }\n\n      return () => {\n         document.removeEventListener('click', clickOutside)\n         document.removeEventListener('keyup', focusOutside)\n         document.removeEventListener('keydown', keyboardControls)\n         document.removeEventListener('keydown', escClick)\n      }\n   }, [])\n\n   /**\n    * Close menu when clicking outside.\n    *\n    * @param {Event} event The click event.\n    */\n   function clickOutside(event) {\n      if (\n         !menuRef.current.contains(event.target) &&\n         !triggerRef.current.contains(event.target)\n      ) {\n         setExpanded(false)\n      }\n   }\n\n   /**\n    * Checks for focus outside of component.\n    *\n    * @param {Event} event The click event.\n    */\n   function focusOutside(event) {\n      if (!containerRef.current.contains(event.target)) {\n         setExpanded(false)\n      }\n   }\n\n   /**\n    * Detect an escape key press and close.\n    *\n    * @param {Event} event The click event.\n    */\n   function escClick(event) {\n      if (event.key === 'Escape') {\n         setExpanded(false)\n      }\n   }\n   /**\n    * Get the current index position for the active element.\n    *\n    * @param   {HTMLElement} el       The current element to compare.\n    * @param   {NodeList}    elements The list of elements.\n    * @returns {Boolean}              The current index position in array.\n    */\n   function getActiveIndex(el, elements) {\n      const array = Array.prototype.slice.call(elements) // Convert NodeList to array.\n      return {\n         index: array.indexOf(el),\n         length: array.length - 1\n      }\n   }\n\n   /**\n    * Set focus on element.\n    *\n    * @param {HTMLElement} element The element to recieve focus.\n    */\n   function setFocus(element) {\n      if (!element) {\n         return\n      }\n      setTimeout(() => {\n         element.focus({preventScroll: true})\n      }, 25)\n   }\n\n   /**\n    * Create HTML from a string.\n    *\n    * @param   {string} html The string to set as HTML.\n    * @returns {string}      Returns a string to render as HTML.\n    */\n   function createMarkup(html) {\n      return {\n         __html: html\n      }\n   }\n\n   return (\n      <>\n         {!!label && (\n            <div\n               ref={containerRef}\n               className={classNames(\n                  'react-a11y-dropdown',\n                  !useStyles ? 'unstyled' : null,\n                  className && className\n               )}\n               id={id ? id : null}\n            >\n               <button\n                  ref={triggerRef}\n                  className={classNames(\n                     'react-a11y-dropdown--button',\n                     !useStyles ? 'unstyled' : null,\n                     buttonClassName && buttonClassName\n                  )}\n                  aria-expanded={expanded ? 'true' : 'false'}\n                  onClick={() => setExpanded((expanded) => !expanded)}\n                  dangerouslySetInnerHTML={createMarkup(label)}\n               ></button>\n               <div\n                  className={classNames(\n                     'react-a11y-dropdown--menu',\n                     !useStyles ? 'unstyled' : null,\n                     dropdownClassName && dropdownClassName,\n                     expanded ? 'expanded' : null\n                  )}\n                  ref={menuRef}\n                  aria-hidden={expanded ? 'false' : 'true'}\n               >\n                  {children}\n               </div>\n            </div>\n         )}\n      </>\n   )\n}\n\nDropDown.propTypes = {\n   id: PropTypes.string,\n   label: PropTypes.string.isRequired,\n   children: PropTypes.object,\n   useStyles: PropTypes.bool,\n   className: PropTypes.string,\n   buttonClassName: PropTypes.string,\n   dropdownClassName: PropTypes.string\n}\n\nDropDown.defaultProps = {\n   useStyles: true\n}\n","export default function MenuOne() {\n   return (\n      <ul className=\"text-sm\">\n         <li>\n            <a href=\"#\" className=\"block w-full text-left p-1 hover:underline\">\n               Link One\n            </a>\n         </li>\n         <li>\n            <a href=\"#\" className=\"block w-full text-left p-1 hover:underline\">\n               Link Two\n            </a>\n         </li>\n         <li>\n            <a href=\"#\" className=\"block w-full text-left p-1 hover:underline\">\n               Link Three\n            </a>\n         </li>\n         <li>\n            <a href=\"#\" className=\"block w-full text-left p-1 hover:underline\">\n               Link Four\n            </a>\n         </li>\n         <li>\n            <a href=\"#\" className=\"block w-full text-left p-1 hover:underline\">\n               Link Five\n            </a>\n         </li>\n      </ul>\n   )\n}\n","export default function MenuTwo() {\n   return (\n      <div>\n         <h3 className=\"mb-1 text-lg font-bold p-1 border-b\">Menu Items</h3>\n         <ul className=\"mb-2 text-sm py-2\">\n            <li>\n               <button className=\"w-full text-left p-1 hover:underline\">\n                  Item One\n               </button>\n            </li>\n            <li>\n               <button className=\"w-full text-left p-1 hover:underline\">\n                  Item Two\n               </button>\n            </li>\n            <li>\n               <button className=\"w-full text-left p-1 hover:underline\">\n                  Item Three\n               </button>\n            </li>\n         </ul>\n         <div className=\"p-3 bg-gray-100 rounded-sm border\">\n            <label\n               htmlFor=\"input\"\n               className=\"block uppercase font-bold text-xs m-0 mb-2\"\n            >\n               Form Input\n            </label>\n            <input\n               id=\"input\"\n               type=\"text\"\n               className=\"border w-full py-1 px-2 rounded-sm\"\n            />\n         </div>\n      </div>\n   )\n}\n","export default function MenuThree() {\n   return (\n      <div className=\"p-2 text-sm\">\n         <h4 className=\"font-bold text-lg mb-1\">Heading Text</h4>\n         <p className=\"text-sm\">\n            This dropdown has no interections or focuable elements. It can be\n            used simply for informational purposes.\n         </p>\n      </div>\n   )\n}\n","export default function Intro() {\n   return (\n      <>\n         <h1 className=\"text-4xl font-black mb-2 pt-6\">React A11y DropDown</h1>\n         <h2 className=\"text-2xl font-thin opacity-75 pb-5 border-b mb-5\">\n            An accessible and unopinionated dropdown component for{' '}\n            <a\n               href=\"https://www.reactjs.org\"\n               className=\"underline hover:no-underline text-sky-700\"\n            >\n               React\n            </a>{' '}\n            with full keyboard support.\n         </h2>\n         <p className=\"font-normal mb-6\">\n            Use the tab key in combination with your keyboard up/down arrows to\n            navigate through the drop menu's and content.\n            <br />\n            &rarr;{' '}\n            <a\n               href=\"https://github.com/dcooney/react-a11y-dropdown\"\n               className=\"font-semibold text-sky-700 hover:underline inline-block py-1\"\n            >\n               View on Github\n            </a>\n         </p>\n      </>\n   )\n}\n","import DropDown from './lib/components/DropDown'\nimport MenuOne from './components/MenuOne'\nimport MenuTwo from './components/MenuTwo'\nimport MenuThree from './components/MenuThree'\nimport Intro from './components/Intro'\n\nexport default function App() {\n   return (\n      <div className=\"container mx-auto\">\n         <Intro />\n         <div className=\"flex flex-nowrap items-center gap-4 self-start text-md\">\n            <DropDown\n               id=\"my-dropdown\"\n               label=\"Show Links\"\n               className=\"drop\"\n               buttonClassName=\"button\"\n               dropdownClassName=\"menu\"\n            >\n               <MenuOne />\n            </DropDown>\n            <DropDown id=\"my-id-2\" label=\"Show Form Elements\">\n               <MenuTwo />\n            </DropDown>\n            <DropDown label={`No Focusable Elements <span>💪</span>`}>\n               <MenuThree />\n            </DropDown>\n            <DropDown label=\"Unstyled Dropdown\" useStyles={false}>\n               <MenuOne />\n            </DropDown>\n         </div>\n      </div>\n   )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n)\n"],"sourceRoot":""}