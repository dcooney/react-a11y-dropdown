{"version":3,"file":"index.umd.js","sources":["../src/lib/defaults.js","../src/lib/styles.js","../src/lib/DropDown.js"],"sourcesContent":["/**\n * Default component props.\n */\nexport const defaults = {\n   button: {\n      background: '#eef1f4',\n      border: '1px solid #d6d9dc',\n      borderRadius: '3px',\n      color: '#494a4c',\n      fontSize: '14px',\n      fontWeight: null,\n      margin: '0',\n      padding: '8px 12px',\n      transition: null,\n      width: null,\n      hover: {\n         background: '#eaedef',\n         borderColor: '#c1c3c6',\n         borderRadius: null,\n         color: '#242526'\n      },\n      active: {\n         background: null,\n         borderColor: null,\n         borderRadius: null,\n         color: null\n      }\n   },\n   dropdown: {\n      background: '#fff',\n      border: '1px solid #d6d9dc',\n      borderRadius: '3px',\n      bottom: null,\n      boxShadow: '0 8px 16px rgba(88, 92, 95, 0.1)',\n      display: 'block',\n      left: '0',\n      margin: '5px 0 0',\n      padding: '10px',\n      position: 'absolute',\n      right: null,\n      transform: null,\n      transition: 'all 0.15s ease',\n      top: '100%',\n      width: '250px',\n      zIndex: 99999,\n      active: {\n         bottom: null,\n         display: null,\n         left: null,\n         right: null,\n         top: null,\n         transform: null\n      }\n   },\n   container: {\n      width: 'auto',\n      position: 'relative'\n   }\n}\n","import styled, {css} from 'styled-components'\n\nconst ContainerStyles = css`\n   width: ${(props) => getProp(props.styles.width)};\n`\nexport const Container = styled.div`\n   position: ${(props) =>\n      getProp(props.styles.position) ? props.styles.position : 'static'};\n   ${(props) => (props.useStyles ? ContainerStyles : null)}\n`\n\nconst ButtonStyles = css`\n   background: ${(props) => getProp(props.styles.background)};\n   border: ${(props) => getProp(props.styles.border)};\n   border-color: ${(props) => getProp(props.styles.borderColor)};\n   border-radius: ${(props) => getProp(props.styles.borderRadius)};\n   color: ${(props) => getProp(props.styles.color)};\n   cursor: pointer;\n   font-size: ${(props) => getProp(props.styles.fontSize)};\n   font-weight: ${(props) => getProp(props.styles.fontWeight)};\n   margin: ${(props) => getProp(props.styles.margin)};\n   padding: ${(props) => getProp(props.styles.padding)};\n   transition: ${(props) => getProp(props.styles.transition)};\n   width: ${(props) => getProp(props.styles.width)};\n   &:after {\n      content: '';\n      display: inline-block;\n      margin: 0 3px;\n      position: relative;\n      left: 4px;\n      top: 3px;\n      border-color: currentColor transparent transparent;\n      border-width: 5px 4px;\n      border-style: solid;\n      opacity: 0.55;\n   }\n   :hover,\n   :focus {\n      color: ${(props) => getProp(props.styles.hover.color)};\n      background: ${(props) => getProp(props.styles.hover.background)};\n      border-color: ${(props) => getProp(props.styles.hover.borderColor)};\n      border-radius: ${(props) => getProp(props.styles.hover.borderRadius)};\n      &:after {\n         opacity: 0.75;\n      }\n   }\n   &.active {\n      color: ${(props) => getProp(props.styles.active.color)};\n      background: ${(props) => getProp(props.styles.active.background)};\n      border-color: ${(props) => getProp(props.styles.active.borderColor)};\n      border-radius: ${(props) => getProp(props.styles.active.borderRadius)};\n   }\n`\nexport const Button = styled.button`\n   ${(props) => (props.useStyles ? ButtonStyles : null)}\n`\n\nexport const MenuStyles = css`\n   background-color: ${(props) => getProp(props.styles.background)};\n   border: ${(props) => getProp(props.styles.border)};\n   border-color: ${(props) => getProp(props.styles.borderColor)};\n   border-radius: ${(props) => getProp(props.styles.borderRadius)};\n   bottom: ${(props) => getProp(props.styles.bottom)};\n   box-shadow: ${(props) => getProp(props.styles.boxShadow)};\n   display: ${(props) => getProp(props.styles.display)};\n   left: ${(props) => getProp(props.styles.left)};\n   margin: ${(props) => getProp(props.styles.margin)};\n   padding: ${(props) => getProp(props.styles.padding)};\n   right: ${(props) => getProp(props.styles.right)};\n   top: ${(props) => getProp(props.styles.top)};\n   transform: ${(props) => getProp(props.styles.transform)};\n   transition: ${(props) => getProp(props.styles.transition)};\n   width: ${(props) => getProp(props.styles.width)};\n   &.active {\n      bottom: ${(props) => getProp(props.styles.active.bottom)};\n      display: ${(props) => getProp(props.styles.active.display)};\n      left: ${(props) => getProp(props.styles.active.left)};\n      right: ${(props) => getProp(props.styles.active.right)};\n      top: ${(props) => getProp(props.styles.active.top)};\n      transform: ${(props) => getProp(props.styles.active.transform)};\n   }\n`\nexport const Menu = styled.div`\n   display: ${(props) => getProp(props.styles.display)};\n   opacity: ${(props) => (props.expanded ? '1' : '0')};\n   position: ${(props) => getProp(props.styles.position)};\n   visibility: ${(props) => (props.expanded ? 'visible' : 'hidden')};\n   z-index: ${(props) => getProp(props.styles.zIndex)};\n   pointer-events: ${(props) => (props.expanded ? 'auto' : 'none')};\n   ${(props) => (props.useStyles ? MenuStyles : null)}\n`\n\n/**\n * Get style prop, only return if not null.\n *\n * @param   {string||boolean} prop The property to compare.\n * @returns {string}               The CSS prop value.\n */\nfunction getProp(prop) {\n   return prop !== null && prop\n}\n","import cn from 'classnames'\nimport React, {useEffect, useImperativeHandle, useRef, useState} from 'react'\nimport {defaults} from './defaults'\nimport {Button, Container, Menu} from './styles'\n\n/**\n * Accessible Dropdown component for React.\n *\n * @param {object}   props                         The component props.\n * @param {string}   props.id                      An optional ID for the dropdown.\n * @param {string}   props.label                   The button text for opening the dropdown.\n * @param {boolean}  props.isMenu                  Is this a menu button group?\n * @param {object}   props.children                Component children.\n * @param {boolean}  props.useStyles               Should the component use the OOTB styling.\n * @param {boolean}  props.search                  Enbale searching dropdown menu contents by first letter when dropdown is in open state.\n * @param {string}   props.className               Classnames for the dropdown container.\n * @param {string}   props.activeClassName         Classnames for the dropdown container whilst active.\n * @param {string}   props.buttonClassName         Classnames for the button element.\n * @param {string}   props.activeButtonClassName   Classnames for the button element whilst active.\n * @param {string}   props.dropdownClassName       Classnames for the dropdown/menu element.\n * @param {string}   props.activeDropdownClassName Classnames for the dropdown/menu element whilst active.\n * @param {object}   props.config                  Override styling configuration for the component.\n * @param {boolean}  props.onHover                 Open the menu on mouse hover.\n * @param {string}   props.href                    The link to attach to the button element.\n * @returns {Element}                              The DropDown component.\n */\nconst DropDown = React.forwardRef((props, ref) => {\n   const {\n      id,\n      label,\n      isMenu = true,\n      children,\n      useStyles = true,\n      search = false,\n      className,\n      activeClassName,\n      buttonClassName,\n      activeButtonClassName,\n      dropdownClassName,\n      activeDropdownClassName,\n      config,\n      onHover = false,\n      href\n   } = props\n   const [expanded, setExpanded] = useState(false)\n   const [theId] = useState(id ? id : generateId(10)) // Generate random ID if not specified.\n   const loaded = useRef(false)\n   const containerRef = useRef()\n   const menuRef = useRef()\n   const buttonRef = useRef()\n   const focusable =\n      'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])'\n   let hoverIntent = null\n\n   // Get styling config.\n   const {container, button, dropdown} = config ? config : {}\n   const buttonStyles = {\n      ...defaults.button,\n      ...button,\n      hover: {\n         ...defaults.button.hover,\n         ...button?.hover\n      },\n      active: {\n         ...defaults.button.active,\n         ...button?.active\n      }\n   }\n   const menuStyles = {\n      ...defaults.dropdown,\n      ...dropdown,\n      active: {\n         ...defaults.dropdown.active,\n         ...dropdown?.active\n      }\n   }\n   const containerStyles = {...defaults.container, ...container}\n\n   /**\n    * Set all the focusable elements in the dropdown.\n    */\n   function setFocusable() {\n      const elements = menuRef.current.querySelectorAll(focusable)\n      if (elements) {\n         elements.forEach((item) => {\n            item.tabIndex = '-1'\n         })\n      }\n   }\n\n   /**\n    * Handle keyboard controls.\n    *\n    * @param {Event} event The click event.\n    */\n   function keyboardControls(event) {\n      const elements = menuRef.current.querySelectorAll(focusable)\n      if (!elements) {\n         return\n      }\n\n      setFocusable()\n\n      const active = document.activeElement\n      const target = event.target\n      const {index, length} = getActiveIndex(active, elements)\n      const {shiftKey, key} = event\n\n      // Exit if elements are not focusable.\n      if (!containerRef?.current.contains(active) || elements.length === 0) {\n         switch (key) {\n            // Exit if esc and no focusable elements.\n            case 'Esc':\n            case 'Escape': // Escape\n               setExpanded(false)\n               break\n\n            default:\n               break\n         }\n         return\n      }\n\n      if (shiftKey) {\n         // Shift + Tab\n         if (key === 'Tab') {\n            setExpanded(false)\n            return\n         }\n      } else {\n         switch (key) {\n            case ' ':\n            case 'Enter':\n               //setFocus(buttonRef.current)\n               //setExpanded(false)\n               break\n            case 'Esc':\n            case 'Escape': // Escape\n               setFocus(buttonRef.current)\n               setExpanded(false)\n               break\n\n            case 'ArrowDown':\n            case 'Down': // Down arrow.\n               if (active === buttonRef.current) {\n                  // Focused on trigger then expand the menu.\n                  setFocus(elements[0])\n                  setExpanded(true)\n               } else {\n                  const next = index === length ? 0 : index + 1\n                  elements[next] && setFocus(elements[next])\n               }\n               event.preventDefault()\n               break\n\n            case 'Up':\n            case 'ArrowUp': // Up arrow.\n               const prev = index === 0 ? length : index - 1\n               elements[prev] && setFocus(elements[prev])\n               event.preventDefault()\n               break\n\n            case 'Home':\n            case 'PageUp': // Home.\n               setFocus(elements[0])\n               event.preventDefault()\n               break\n\n            case 'End':\n            case 'PageDown': // End.\n               setFocus(elements[elements.length - 1])\n               event.preventDefault()\n               break\n\n            default:\n               // Search\n               search && searchByFirstLetter(target, key)\n               break\n         }\n      }\n   }\n\n   // On mount.\n   useEffect(() => {\n      setFocusable()\n\n      if (!loaded.current) {\n         document.addEventListener('click', clickOutside)\n         document.addEventListener('keyup', focusOutside)\n         document.addEventListener('keydown', keyboardControls)\n         loaded.current = true\n      }\n\n      return () => {\n         document.removeEventListener('click', clickOutside)\n         document.removeEventListener('keyup', focusOutside)\n         document.removeEventListener('keydown', keyboardControls)\n      }\n   }, [])\n\n   /**\n    * Click handler to toggle the dropdown menu.\n    *\n    * @param {Event} event The click event.\n    */\n   function toggleMenu() {\n      const elements = menuRef.current.querySelectorAll(focusable)\n      if (!expanded) {\n         // Set focusable elements on menu open.\n         setFocusable()\n      }\n      if (elements && !expanded) {\n         // Set initial focus.\n         setFocus(elements[0])\n      }\n      // Set expanded state.\n      setExpanded((expanded) => !expanded)\n   }\n\n   /**\n    * Show the dropdown menu.\n    */\n   function showMenu() {\n      document.addEventListener('mousemove', hideMenuHover)\n      setFocusable()\n      setExpanded(true)\n   }\n\n   /**\n    * Hide dropmenu if mouseout of container element.\n    *\n    * @param {Event} event The mouse event.\n    */\n   function hideMenuHover(event) {\n      clearTimeout(hoverIntent)\n      hoverIntent = setTimeout(function () {\n         if (!containerRef?.current.contains(event.target)) {\n            setExpanded(false)\n            document.removeEventListener('mousemove', hideMenuHover)\n         }\n      }, 25)\n   }\n\n   /**\n    * Allow for setting the expanded state from parent components.\n    * @see https://reactjs.org/docs/hooks-reference.html#useimperativehandle\n    */\n   useImperativeHandle(ref, () => ({\n      /**\n       * Exposed function to close the dropdown.\n       */\n      close() {\n         setExpanded(false)\n      }\n   }))\n\n   /**\n    * Close menu when clicking outside.\n    *\n    * @param {Event} event The click event.\n    */\n   function clickOutside(event) {\n      if (!event || !event?.target) {\n         return // exit if event is null.\n      }\n      if (\n         !menuRef?.current.contains(event.target) &&\n         !buttonRef?.current.contains(event.target)\n      ) {\n         setExpanded(false)\n      }\n   }\n\n   /**\n    * Checks for focus outside of component.\n    *\n    * @param {Event} event The click event.\n    */\n   function focusOutside(event) {\n      if (!containerRef?.current.contains(event.target)) {\n         setExpanded(false)\n      }\n   }\n\n   /**\n    * Search the menu elements by first letter.\n    *\n    * @param {string} current The currently active element.\n    * @param {string} char    The character to search.\n    * @returns null\n    */\n   function searchByFirstLetter(current, char) {\n      const elements = menuRef.current.querySelectorAll(focusable)\n      let start = 0\n      let index = 0\n\n      if (char.length > 1 || !elements) {\n         return\n      }\n\n      const array = Array.prototype.slice.call(elements)\n\n      // First letters.\n      const letters =\n         array &&\n         array.map((item) => {\n            return item?.textContent\n               ? item.textContent.trim()[0].toLowerCase()\n               : ''\n         })\n\n      // Get start item from the position of the current item.\n      start = array.indexOf(current) + 1\n      if (start >= array.length) {\n         start = 0\n      }\n\n      // Check menu elements.\n      index = letters.indexOf(char.toLowerCase(), start)\n\n      // Search from beginning.\n      if (index === -1) {\n         index = letters.indexOf(char.toLowerCase(), 0)\n      }\n\n      // Match found, set focus\n      if (index > -1) {\n         setFocus(array[index])\n      }\n   }\n\n   /**\n    * Get the current index position for the active element.\n    *\n    * @param   {HTMLElement} el       The current element to compare.\n    * @param   {NodeList}    elements The list of elements.\n    * @returns {Boolean}              The current index position in array.\n    */\n   function getActiveIndex(el, elements) {\n      const array = Array.prototype.slice.call(elements) // Convert NodeList to array.\n      return {\n         index: array.indexOf(el),\n         length: array.length - 1\n      }\n   }\n\n   /**\n    * Set focus on element.\n    *\n    * @param {HTMLElement} element The element to recieve focus.\n    */\n   function setFocus(element) {\n      if (!element) {\n         return\n      }\n      setTimeout(() => {\n         element.focus({preventScroll: true})\n      }, 20)\n   }\n\n   /**\n    * Create HTML from a string.\n    *\n    * @param   {string} html The string to set as HTML.\n    * @returns {string}      Returns a string to render as HTML.\n    */\n   function createMarkup(html) {\n      return {\n         __html: html\n      }\n   }\n\n   /**\n    * Generate a random string.\n    *\n    * @param   {int} length The length of the string to generate.\n    * @returns {string}     The generated string.\n    */\n   function generateId(length) {\n      var result = ''\n      var characters = '0123456789'\n      var charactersLength = characters.length\n      for (var i = 0; i < length; i++) {\n         result += characters.charAt(\n            Math.floor(Math.random() * charactersLength)\n         )\n      }\n      return result\n   }\n\n   return (\n      <>\n         {!!label && (\n            <Container\n               ref={containerRef}\n               id={`dropdown-${theId}`}\n               className={cn(\n                  'react-a11y-dropdown',\n                  className && className,\n                  expanded ? 'expanded' : null,\n                  expanded && activeClassName ? activeClassName : null\n               )}\n               useStyles={useStyles}\n               styles={containerStyles}\n            >\n               <Button\n                  as={href ? 'a' : null}\n                  href={href ? href : null}\n                  ref={buttonRef}\n                  id={`button-${theId}`}\n                  className={cn(\n                     'react-a11y-dropdown--button',\n                     buttonClassName && buttonClassName,\n                     expanded ? 'active' : null,\n                     expanded && activeButtonClassName\n                        ? activeButtonClassName\n                        : null\n                  )}\n                  useStyles={useStyles}\n                  styles={buttonStyles}\n                  onClick={() => toggleMenu()}\n                  dangerouslySetInnerHTML={createMarkup(label)}\n                  aria-expanded={expanded ? 'true' : 'false'}\n                  aria-haspopup=\"true\"\n                  aria-controls={isMenu ? `menu-${theId}` : null}\n                  onFocus={() => onHover && showMenu()}\n                  onMouseEnter={() => onHover && showMenu()}\n               ></Button>\n               <Menu\n                  ref={menuRef}\n                  id={`menu-${theId}`}\n                  className={cn(\n                     'react-a11y-dropdown--menu',\n                     dropdownClassName && dropdownClassName,\n                     expanded ? 'active' : null,\n                     expanded && activeDropdownClassName\n                        ? activeDropdownClassName\n                        : null\n                  )}\n                  useStyles={useStyles}\n                  styles={menuStyles}\n                  expanded={expanded}\n                  aria-hidden={expanded ? 'false' : 'true'}\n                  aria-labelledby={isMenu ? `button-${theId}` : null}\n                  role={isMenu ? `menu` : null}\n               >\n                  {children}\n               </Menu>\n            </Container>\n         )}\n      </>\n   )\n})\n\nexport default DropDown\n"],"names":["defaults","background","border","borderRadius","color","fontSize","fontWeight","margin","padding","transition","width","hover","borderColor","active","bottom","boxShadow","display","left","position","right","transform","top","zIndex","ContainerStyles","css","_templateObject","_taggedTemplateLiteralLoose","props","getProp","styles","Container","styled","div","_templateObject2","useStyles","ButtonStyles","_templateObject3","Button","button","_templateObject4","MenuStyles","_templateObject5","Menu","_templateObject6","expanded","prop","React","forwardRef","ref","html","id","label","_props$isMenu","isMenu","children","_props$useStyles","_props$search","search","className","activeClassName","buttonClassName","activeButtonClassName","dropdownClassName","activeDropdownClassName","config","_props$onHover","onHover","href","_useState","useState","setExpanded","theId","length","result","i","charAt","Math","floor","characters","random","generateId","loaded","useRef","containerRef","menuRef","buttonRef","focusable","hoverIntent","_ref","container","dropdown","buttonStyles","_extends","menuStyles","containerStyles","setFocusable","elements","current","querySelectorAll","forEach","item","tabIndex","keyboardControls","event","document","activeElement","target","_getActiveIndex","el","array","Array","prototype","slice","call","index","indexOf","getActiveIndex","shiftKey","key","contains","setFocus","next","preventDefault","prev","char","start","letters","map","textContent","trim","toLowerCase","searchByFirstLetter","showMenu","addEventListener","hideMenuHover","clearTimeout","setTimeout","removeEventListener","clickOutside","focusOutside","element","focus","preventScroll","useEffect","useImperativeHandle","close","h","Fragment","cn","as","onClick","dangerouslySetInnerHTML","__html","onFocus","onMouseEnter","role"],"mappings":"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"}